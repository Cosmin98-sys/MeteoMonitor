@startuml

title __Class Diagram__\n

  namespace ro.mta.se.lab {
    class ro.mta.se.lab.Main {
        + void start(Stage primaryStage)
        <u>ReaderInterface reader
  }
  

  namespace ro.mta.se.lab {
    namespace controller {
      class ro.mta.se.lab.controller.MainWindowsController {
       - void cityComboBoxChange()
       - void initialize()
       - void countryComboBoxChange()
       - ArrayList<CityInfo> cities
       - WeatherUtilityInterface weatherUtility
  }
  

  namespace ro.mta.se.lab {
    namespace model {
      class ro.mta.se.lab.model.CityInfo {
          - id: int
          - cityName: String
          - latitude: double
          - longitude: double
          - countryCode: double
          + getCityName(): String
          + getLatitude(): double
          + getLongitude(): double
          + getCountryCode(): String
          + getId(): int
      }
    }
  }
  

  namespace ro.mta.se.lab {
    namespace model {
      class ro.mta.se.lab.model.WeatherInfos {
          - float humidity
          - float wind
          - float temperature
          - String description
          - String icon
          + WeatherInfos(humidity: float ,wind: float, temperature: float, description: String, icon:String)
          + getHumidity(): float
          + getWind(): float
          + getTemperature(): float
          + getIcon(): String
          + getDescription(): String
      }
    }
  }
  

  namespace ro.mta.se.lab {
    namespace utility {
      class ro.mta.se.lab.utility.Reader {
      + readCities(filename: String): ArrayList<CityInfo>
      + parseJSON(object: JSONObject): WeatherInfos
      + convertKelvinToCelsius(kelvin: double): float
      }
    }
  }
  

  namespace ro.mta.se.lab {
    namespace utility {
      interface ro.mta.se.lab.utility.ReaderInterface {
      + readCities(filename: String): ArrayList<CityInfo>
      + parseJSON(object: JSONObject): WeatherInfos
      }
    }
  }
  

  namespace ro.mta.se.lab {
    namespace utility {
      class ro.mta.se.lab.utility.WeatherUtility {
       -<u><i>String apiToken
       -<u><i>String baseLink
       -getInfos(link: String):WeatherInfos
       +searchForInfos(cityInfos: String... ):WeatherInfos
       +searchForInfos(int: id ):WeatherInfos
       +searchForInfos(lat:double, longit: double ):WeatherInfos

      }
    }
  }
  

  namespace ro.mta.se.lab {
    namespace utility {
      interface ro.mta.se.lab.utility.WeatherUtilityInterface {
      +searchForInfos(cityInfos: String... ):WeatherInfos
      +searchForInfos(int: id ):WeatherInfos
      +searchForInfos(lat:double, longit: double ):WeatherInfos

      }
    }
  }
  

  ro.mta.se.lab.Main -up-|> javafx.application.Application
  ro.mta.se.lab.controller.MainWindowsController o-- ro.mta.se.lab.utility.WeatherUtilityInterface : weatherUtility
  ro.mta.se.lab.utility.Reader .up.|> ro.mta.se.lab.utility.ReaderInterface
  ro.mta.se.lab.utility.WeatherUtility .up.|> ro.mta.se.lab.utility.WeatherUtilityInterface
  ro.mta.se.lab.utility.WeatherUtility o-- ro.mta.se.lab.utility.ReaderInterface : readerFile


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
